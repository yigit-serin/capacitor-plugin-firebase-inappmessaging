{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface FirebaseInAppMessagingPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  \n  /**\n   * Listen for when an in-app message is clicked\n   * @since 1.0.0\n   */\n  addListener(\n    eventName: 'inAppMessagingMessageClicked',\n    listenerFunc: (data: any) => void,\n  ): Promise<PluginListenerHandle>;\n\n  /**\n   * Listen for when an in-app message is dismissed\n   * @since 1.0.0\n   */\n  addListener(\n    eventName: 'inAppMessagingMessageDismissed',\n    listenerFunc: (data: any) => void,\n  ): Promise<PluginListenerHandle>;\n\n  /**\n   * Remove all listeners for this plugin\n   * @since 1.0.0\n   */\n  removeAllListeners(): Promise<void>;\n}\n"]}